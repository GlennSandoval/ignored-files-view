{
  "name": "ignored-files-view",
  "displayName": "Show Ignored Files",
  "description": "A VS Code extension that shows all files ignored by Git in a dedicated tree view.",
  "version": "0.0.1",
  "publisher": "glennsandoval",
  "license": "MIT",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:.git"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Ignored Files View",
      "properties": {
        "ignoredFilesView.maxItems": {
          "type": "number",
          "default": 6000,
          "minimum": 100,
          "markdownDescription": "Maximum number of ignored files to collect and display. Capping protects performance and memory on very large repositories. Increase with care."
        },
        "ignoredFilesView.excludeFolders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "node_modules"
          ],
          "markdownDescription": "Folder names to exclude from the Ignored Files view. Matches any path segment (e.g., 'node_modules', 'build')."
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "ignoredFilesView",
          "name": "Ignored Files",
          "contextualTitle": "Ignored Files",
          "icon": "$(eye-closed)"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "show-ignored.delete",
          "when": "false"
        },
        {
          "command": "show-ignored.open",
          "when": "false"
        },
        {
          "command": "show-ignored.copyPath",
          "when": "false"
        },
        {
          "command": "show-ignored.explain",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "show-ignored.refresh",
          "when": "view == ignoredFilesView",
          "group": "navigation@1"
        },
        {
          "command": "show-ignored.openSettings",
          "when": "view == ignoredFilesView",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "show-ignored.open",
          "when": "view == ignoredFilesView && viewItem == file",
          "group": "inline@1"
        },
        {
          "command": "show-ignored.copyPath",
          "when": "view == ignoredFilesView && (viewItem == file || viewItem == dir)",
          "group": "inline@2"
        },
        {
          "command": "show-ignored.explain",
          "when": "view == ignoredFilesView && viewItem == file",
          "group": "inline@3"
        },
        {
          "command": "show-ignored.delete",
          "when": "view == ignoredFilesView && (viewItem == file || viewItem == dir)",
          "group": "inline@4"
        }
      ]
    },
    "commands": [
      {
        "command": "show-ignored.refresh",
        "title": "Ignored Files View: Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "show-ignored.openSettings",
        "title": "Ignored Files View: Settings",
        "icon": "$(gear)"
      },
      {
        "command": "show-ignored.open",
        "title": "Open File",
        "icon": "$(go-to-file)"
      },
      {
        "command": "show-ignored.copyPath",
        "title": "Copy Path",
        "icon": "$(clippy)"
      },
      {
        "command": "show-ignored.explain",
        "title": "Show Ignore Rule",
        "icon": "$(question)"
      },
      {
        "command": "show-ignored.delete",
        "title": "Delete",
        "icon": "$(trash)"
      }
    ]
  },
  "scripts": {
    "dev": "vite build --watch",
    "watch": "npm run dev",
    "build": "vite build",
    "lint": "biome lint .",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "format": "biome format --write .",
    "package": "vsce package -o dist/show-ignored-files-${npm_package_version}.vsix",
    "test:unit": "vitest run",
    "test:watch": "vitest",
    "test:smoke": "node tests/smoke/smoke-tests.js && node tests/smoke/provider-behavior.test.js",
    "test": "npm run build && npm run test:unit && npm run test:smoke"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.8.3",
    "@types/node": "^20.11.0",
    "@types/vscode": "^1.84.0",
    "@vitest/coverage-v8": "^1.6.0",
    "@vscode/vsce": "^3.6.0",
    "typescript": "^5.5.0",
    "vite": "^5.4.0",
    "vitest": "^1.6.0"
  }
}